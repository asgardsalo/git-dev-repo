pipeline {
    agent any

    environment {
        AWS_DEFAULT_REGION = 'us-east-1' // Specify your AWS region
        SNS_TOPIC_ARN = 'arn:aws:sns:us-west-2:123456789012:MyTopic' // Replace with your SNS topic ARN
        INSTANCE_AGE_THRESHOLD = 30 // Threshold in days
    }

    stages {
        stage('Check EC2 Instances') {
            steps {
                script {
                    // Step 1: Describe EC2 instances
                    def describeInstances = sh(script: "aws ec2 describe-instances --query 'Reservations[*].Instances[*].[InstanceId,LaunchTime]' --output json", returnStdout: true).trim()
                    def instances = readJSON text: describeInstances

                    def currentDate = new Date()
                    def thresholdDate = currentDate - INSTANCE_AGE_THRESHOLD

                    // Step 2: Iterate through instances and check age
                    instances.each { reservation ->
                        reservation.each { instance ->
                            def instanceId = instance[0]
                            def launchTime = instance[1]

                            def launchDate = Date.parse("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'", launchTime)
                            
                            if (launchDate < thresholdDate) {
                                // Step 3: Send SNS notification
                                def message = "Instance ${instanceId} is older than ${INSTANCE_AGE_THRESHOLD} days."
                                sh "aws sns publish --topic-arn ${SNS_TOPIC_ARN} --message '${message}'"
                            }
                        }
                    }
                }
            }
        }
    }

    post {
        failure {
            mail to: 'salomon_lara@outlook.com',
                 subject: "Jenkins Job Failed: ${env.JOB_NAME}",
                 body: "Job ${env.JOB_NAME} (${env.BUILD_NUMBER}) failed. Please check the Jenkins console output for more details."
        }
    }
}
